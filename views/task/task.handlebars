<br />
<link rel="stylesheet" href="/css/core.css">
<main>
    <section class="col-md-12">
        <div class="row">
            <div class="col-md-8">
                <textarea id="code-screen">{{content}}</textarea>
            </div>
            <div class="col-md-4" id="chatbox">
                <!-- VIDEO CALL -->
                <div class="card">
                    <div class="card-body">
                        <div id="video-container">
                            <video autoplay id="second-video"></video>
                            <video autoplay id="my-video" muted="true"></video>
                            <div id="step2">
                                <p>Your ID: <span id="my-id">...</span></p>
                                <div class="form-inline">
                                    <input type="text" class="form-control" placeholder="Call User ID..."
                                        id="callto-id" />
                                    <a href="#" class="btn btn-sm btn-success" id="make-call">Call</a>
                                </div>
                            </div>
                            <div id="step3">
                                <p>Talk to <span id="second-id">...</span>
                                    <a href="#" class="btn btn-sm btn-danger" id="end-call">End call</a>
                                </p>
                            </div>
                        </div>
                    </div>
                    <!-- CHAT BOX -->
                    <div class="card">
                        <div class="card-header text-white" style="background-color: #073642 !important">
                            CHAT ROOM
                            <span class="pull-right" id="chatbox-username">
                                {{#if user}}
                                {{user.name}}
                                {{/if}}
                            </span>
                        </div>
                        <div class="card-body text-white">
                            <ul class="media-list" style="heigh: 300px; overflow-y: scroll" id="chatbox-listMessages">

                            </ul>
                        </div>
                        <div class="card-footer">
                            <div class="input-group">
                                <input type="text" class="form-control" placeholder="Type your message here..."
                                    id="userMessage" />
                                <span class="input-group-btn">
                                    <button type="submit" class="btn btn-primary" onclick="sendMessage()">Send</button>
                                </span>
                            </div>
                        </div>

                    </div>
                </div>
    </section>
</main>

<input type="hidden" value="{{roomId}}" id="roomId" />

<script src="http://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.48.2/codemirror.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.48.2/mode/javascript/javascript.min.js"></script>
<script src="/plugin/ot.js"></script>
<script src="/socket.io/socket.io.js"></script>
{{!-- <script src="http://cdn.peerjs.com/0.3/peerjs"></script> --}}
{{!-- <script src="/js/custom.js"></script> --}}

<script>
    const EditorClient = ot.EditorClient;
    const SocketIOAdapter = ot.SocketIOAdapter;
    const CodeMirrorAdapter = ot.CodeMirrorAdapter;

    //const socket = io.connect('http://localhost:3000');
    const socket = io.connect('https://calm-plateau-70181.herokuapp.com');
    let editor = CodeMirror.fromTextArea(document.getElementById("code-screen"), {
        lineNumbers: true,
        theme: "dracula"
    });

    let code = $('#code-screen').val();
    let cmClient;
    function init(str, revision, clients, serverAdapter) {
        if (!code) {
            editor.setValue(str);
        }
        cmClient = window.cmClient = new EditorClient(
            revision, clients, serverAdapter, new CodeMirrorAdapter(editor)
        );
    }

    socket.on('doc', (item) => {
        init(item.str, item.revision, item.clients, new SocketIOAdapter(socket));
    });

    let username = $("#chatbox-username").val();
    if (username === "") {
        let userId = Math.floor(Math.random() * 9999).toString();
        username = "User" + userId;
        $("#chatbox-username").text(username);
    };

    let roomId = $('#roomId').val();
    socket.emit('joinRoom', { room: roomId, username: username });

    let userMessage = function (name, text) {
        return ('<li class="media"> <div class="media-body"> <div class="media">' +
            '<div class="media-body"' +
            '<b>' + name + '</b> : ' + text +
            '<hr/> </div></div></div></li>'
        );
    };

    let sendMessage = function () {
        let userMessage = $('#userMessage').val();
        socket.emit('chatMessage', { message: userMessage, username: username });
        $('#userMessage').val("");
    };

    socket.on('chatMessage', function (data) {
        $('#chatbox-listMessages').append(userMessage(data.username, data.message));
    });

</script>